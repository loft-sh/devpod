// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	context "context"

	managementv1 "github.com/loft-sh/api/v4/pkg/apis/management/v1"
	scheme "github.com/loft-sh/api/v4/pkg/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ConfigsGetter has a method to return a ConfigInterface.
// A group's client should implement this interface.
type ConfigsGetter interface {
	Configs() ConfigInterface
}

// ConfigInterface has methods to work with Config resources.
type ConfigInterface interface {
	Create(ctx context.Context, config *managementv1.Config, opts metav1.CreateOptions) (*managementv1.Config, error)
	Update(ctx context.Context, config *managementv1.Config, opts metav1.UpdateOptions) (*managementv1.Config, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, config *managementv1.Config, opts metav1.UpdateOptions) (*managementv1.Config, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*managementv1.Config, error)
	List(ctx context.Context, opts metav1.ListOptions) (*managementv1.ConfigList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *managementv1.Config, err error)
	ConfigExpansion
}

// configs implements ConfigInterface
type configs struct {
	*gentype.ClientWithList[*managementv1.Config, *managementv1.ConfigList]
}

// newConfigs returns a Configs
func newConfigs(c *ManagementV1Client) *configs {
	return &configs{
		gentype.NewClientWithList[*managementv1.Config, *managementv1.ConfigList](
			"configs",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *managementv1.Config { return &managementv1.Config{} },
			func() *managementv1.ConfigList { return &managementv1.ConfigList{} },
		),
	}
}
