apiVersion: v1
kind: Pod
metadata:
  namespace: istio-system
  # name: devpod-ztunnel-1-21-0 # NOTE: This is ignored
  annotations:
    ambient.istio.io/redirection: disabled
    prometheus.io/scrape: "true"
    sidecar.istio.io/inject: "false"
  # generateName: ztunnel-
  labels:
    featureid: "1234"
    devpod: ztunnel
    sidecar.istio.io/inject: "false"
    app: devpod-ztunnel # NOTE: This make devpod fails
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: devpod-ztunnel
            operator: In
            values:
            - enabled
  containers:
  - name: "devpod"
    env:
    - name: CA_ADDRESS
      value: istiod.istio-system.svc:15012
    - name: XDS_ADDRESS
      value: istiod.istio-system.svc:15012
    - name: RUST_LOG
      value: info
    - name: ISTIO_META_CLUSTER_ID
      value: cluster1
    - name: INPOD_ENABLED
      value: "true"
    - name: ISTIO_META_DNS_PROXY_ADDR
      value: 127.0.0.1:15053
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: INSTANCE_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: SERVICE_ACCOUNT
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.serviceAccountName
    ports:
    - containerPort: 15020
      name: ztunnel-stats
      protocol: TCP
#     # readinessProbe:
#     #   failureThreshold: 3
#     #   httpGet:
#     #     path: /healthz/ready
#     #     port: 15021
#     #     scheme: HTTP
#     #   periodSeconds: 10
#     #   successThreshold: 1
#     #   timeoutSeconds: 1
    resources:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 2Gi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_ADMIN
        - SYS_ADMIN
        - NET_RAW
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: true
      runAsGroup: 1337
      runAsNonRoot: false
      runAsUser: 0
    # terminationMessagePath: /dev/termination-log
    # terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/istio
      name: istiod-ca-cert
    - mountPath: /var/run/secrets/tokens
      name: istio-token
    - mountPath: /var/run/ztunnel
      name: cni-ztunnel-sock-dir
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-c5j45
    - name: containerd-sock
      mountPath: /run/containerd/containerd.sock
      readOnly: true
  # dnsPolicy: ClusterFirst
  # enableServiceLinks: true
  # nodeName: kind1-control-plane
  # nodeSelector:
  #   kubernetes.io/os: linux
  serviceAccount: ztunnel
  serviceAccountName: ztunnel
  # terminationGracePeriodSeconds: 30
  volumes:
  - name: istio-token
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          audience: istio-ca
          expirationSeconds: 43200
          path: istio-token
  - configMap:
      defaultMode: 420
      name: istio-ca-root-cert
    name: istiod-ca-cert
  - hostPath:
      path: /var/run/ztunnel
      type: DirectoryOrCreate
    name: cni-ztunnel-sock-dir
  - name: kube-api-access-c5j45
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
  - name: containerd-sock
    hostPath:
      path: "/var/run/containerd/containerd.sock"
            

