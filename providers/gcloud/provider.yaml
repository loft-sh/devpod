name: gcloud
version: 0.0.1
description: |-
  DevPod on Google Cloud
options:
  GCLOUD_BINARY:
    description: Path to the gcloud binary
    default: gcloud
    before: init
  PROJECT:
    description: The project id to use.
    required: true
    command: ${GCLOUD_BINARY} config list --quiet --verbosity=error --format "value(core.project)"
  ZONE:
    description: The google cloud zone to create the VM in. E.g. europe-west1-d
    required: true
    command: ${GCLOUD_BINARY} config list --quiet --verbosity=error --format "value(compute.zone)"
  DISK_SIZE:
    description: The disk size to use.
    default: "30"
  DISK_IMAGE:
    description: The disk image to use.
    default: projects/cos-cloud/global/images/cos-101-17162-127-5
  MACHINE_TYPE:
    description: The machine type to use.
    default: c2-standard-4
  INACTIVITY_TIMEOUT:
    description: If defined, will automatically stop the VM after the inactivity period.
    default: 500m
  GCLOUD_TOKEN:
    hidden: true
    cache: 10m
    before: command
    command: ${GCLOUD_BINARY} auth application-default print-access-token --quiet --verbosity=error
  INJECT_GIT_CREDENTIALS:
    description: "If DevPod should inject git credentials into the remote host."
    default: "true"
  INJECT_DOCKER_CREDENTIALS:
    description: "If DevPod should inject docker credentials into the remote host."
    default: "true"
  AGENT_PATH:
    description: The path where to inject the DevPod agent to.
    default: /run/agent
agent:
  path: ${AGENT_PATH}
  inactivityTimeout: ${INACTIVITY_TIMEOUT}
  injectGitCredentials: ${INJECT_GIT_CREDENTIALS}
  injectDockerCredentials: ${INJECT_DOCKER_CREDENTIALS}
  exec:
    shutdown: |-
      ${DEVPOD} helper http request -X POST \
                                    -H "Authorization: Bearer ${GCLOUD_TOKEN}" \
                                    https://compute.googleapis.com/compute/v1/projects/${PROJECT}/zones/${ZONE}/instances/devpod-${SERVER_ID}/stop
exec:
  init: |-
    if ! command -v ${GCLOUD_BINARY} &> /dev/null; then
        echo "${GCLOUD_BINARY} command couldn't be found. Please make sure to install the gcloud CLI locally"
        echo "Take a look at https://cloud.google.com/sdk/docs/install-sdk for more information"
        exit 1
    fi
  command: ${DEVPOD} provider call gcloud command
  create: ${DEVPOD} provider call gcloud create
  delete: ${DEVPOD} provider call gcloud delete
  start: ${DEVPOD} provider call gcloud start
  stop: ${DEVPOD} provider call gcloud stop
  status: ${DEVPOD} provider call gcloud status